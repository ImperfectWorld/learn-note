
1. 防抖：你尽管触发事件，但是我一定在事件触发 n 秒后才执行，
如果你在一个事件触发的 n 秒内又触发了这个事件，那我就以新的事件的时间为准，n 秒后才执行，
总之，就是要等你触发完事件 n 秒内不再触发事件，我才执行。（按钮提交）
2. 节流：如果你持续触发事件，每隔一段时间，只执行一次事件 （滚动事件）

### 实现

```
// 防抖
const debounce = (fn, delay) => {
  let timerId = null;
  return (...args) => {
    if (timerId) {
      window.clearTimeout(timerId);
    }
    timerId = setTimeout(() => {
      fn.apply(this, args);
      timerId = null;
    }, delay);
  };
};

// 节流
const throttle = (fn, delay) => {
  let canUse = true;
  return (...args) => {
    if (canUse) {
      fn.apply(this, args);
      canUse = false;
      setTimeout(() => (canUse = true), delay);
    }
  };
};
```
